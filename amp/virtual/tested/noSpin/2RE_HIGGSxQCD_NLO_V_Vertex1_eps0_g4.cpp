
#include "../../../../inc/Functions_Shared.h"

double Eval_V_V1 (  PS_2_2 const& ps)
{

#include "EVAL_V_PS_REFS"

  double t1;
  c_double t10;
  double t104;
  double t11;
  double t113;
  double t117;
  double t122;
  double t123;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t129;
  double t130;
  double t131;
  double t132;
  double t133;
  double t134;
  double t135;
  double t136;
  double t139;
  double t142;
  double t145;
  double t150;
  double t154;
  double t157;
  double t160;
  double t161;
  double t174;
  double t175;
  double t176;
  double t188;
  double t192;
  double t216;
  double t217;
  double t218;
  double t219;
  double t22;
  double t220;
  double t221;
  double t222;
  double t223;
  double t224;
  double t225;
  double t229;
  double t23;
  double t239;
  double t26;
  double t29;
  double t3;
  double t30;
  double t31;
  double t34;
  double t36;
  double t38;
  double t41;
  double t42;
  double t44;
  double t45;
  double t47;
  double t48;
  double t5;
  double t52;
  double t53;
  double t55;
  double t56;
  double t57;
  double t6;
  double t61;
  double t62;
  double t63;
  double t64;
  double t65;
  double t66;
  double t67;
  double t68;
  double t69;
  double t7;
  double t70;
  double t73;
  double t74;
  double t79;
  double t8;
  double t80;
  double t85;
  double t87;
  double t88;
  double t9;
  double t91;
  double t93;
  t1 = Z1Qg(mt2);
  t3 = 0.4e1 - s;
  t5 = beta_y - 0.1e1;
  t6 = 0.1e1 / t5;
  t7 = beta_y + 0.1e1;
  t8 = 0.1e1 / t7;
  t9 = t6 * t8;
  t10 = DenS(s, mH, GammaH);
  t11 = RE(t10);
  t22 = s * s;
  t23 = RE(I3_0_T11_MT2_0_0_MT2_MU2_0);
  t26 = RE(I3_0_T12_MT2_0_0_MT2_MU2_0);
  t29 = beta_y * beta_y;
  t30 = t29 * s;
  t31 = t30 - s + 0.4e1;
  t34 = (t30 + s - 0.2e1) * t8;
  t36 = beta_y * s;
  t38 = 0.1e1 / (t36 + s - 0.2e1);
  t41 = 0.1e1 / (t36 - s + 0.2e1);
  t42 = RE(I1_MT2_MU2_0);
  t44 = t38 * t6 * t41 * t42;
  t45 = s * t31 * t34 * t44;
  t47 = t29 * t29;
  t48 = t47 * s;
  t52 = t5 * t5;
  t53 = 0.1e1 / t52;
  t55 = t7 * t7;
  t56 = 0.1e1 / t55;
  t57 = RE(I2_MT2_0_MT2_MU2_0);
  t61 = t29 * beta_y;
  t62 = t61 * t22;
  t63 = 0.5e1 * t62;
  t64 = t29 * t22;
  t65 = 0.11e2 * t64;
  t66 = 0.8e1 * t30;
  t67 = beta_y * t22;
  t68 = 0.7e1 * t67;
  t69 = 0.8e1 * t36;
  t70 = 0.16e2 * s;
  t73 = RE(I2_T11_0_MT2_MU2_0);
  t74 = t41 * t73;
  t79 = RE(I2_T12_0_MT2_MU2_0);
  t80 = t38 * t79;
  t85 = FA0 * CF;
  t87 = 0.1e1 / 0.3141592653589793e1;
  t88 = AlphaS3 * t87;
  t91 = VF(t85 * CA2 * t88 * Bt);
  t93 = 0.2e1 * t36;
  t104 = t3 * t31 * t34 * t44;
  t113 = 0.3e1 * t22;
  t117 = 0.1e1 / s;
  t122 = t22 * s;
  t123 = t61 * t122;
  t124 = 0.20e2 * t62;
  t125 = t29 * t122;
  t126 = 0.7e1 * t125;
  t127 = 0.16e2 * t64;
  t128 = beta_y * t122;
  t129 = 0.11e2 * t128;
  t130 = 0.32e2 * t30;
  t131 = 0.52e2 * t67;
  t132 = 0.5e1 * t122;
  t133 = 0.80e2 * t36;
  t134 = 0.48e2 * t22;
  t135 = 0.144e3 * s;
  t136 = t123 + t124 - t126 - t127 + t129 + t130 - t131 - t132 + t133 + t134 - t135 + 0.128e3;
  t139 = t41 * t117 * t73;
  t142 = t123 + t124 + t126 + t127 + t129 - t130 - t131 + t132 + t133 - t134 + t135 - 0.128e3;
  t145 = t38 * t117 * t79;
  t150 = FH0 * CF;
  t154 = VF(t150 * CA2 * t88 * At);
  t157 = RE(I3_MT2_0_T11_0_MT2_MT2_MU2_0);
  t160 = s * t8;
  t161 = RE(I3_MT2_0_T12_0_MT2_MT2_MU2_0);
  t174 = 0.7e1 * t64;
  t175 = 0.24e2 * t36;
  t176 = 0.32e2 * s;
  t188 = CFCA2 * AlphaS3;
  t192 = VF(t85 * CA * t188 * t87 * Bt);
  t216 = 0.2e1 * t47 * t122;
  t217 = 0.16e2 * t62;
  t218 = 0.36e2 * t64;
  t219 = 0.3e1 * t128;
  t220 = 0.16e2 * t67;
  t221 = 0.3e1 * t122;
  t222 = 0.48e2 * t36;
  t223 = 0.36e2 * t22;
  t224 = 0.128e3 * s;
  t225 = t216 - t123 - t217 - t125 + t218 - t219 - t130 + t220 + t221 - t222 - t223 + t224 - 0.128e3;
  t229 = t216 + t123 + t217 - t125 + t218 + t219 - t130 - t220 + t221 + t222 - t223 + t224 - 0.128e3;
  t239 = VF(t150 * CA * t188 * t87 * At);
  return(-0.64e2 * t1 * FH0 * t3 * t9 * t11 * PREF_B_At - 0.128e3 * PREF_B_Bt * t1 * FA0 * t11 * s * t9 + (0.8e1 * t22 * t23 + 0.8e1 * t22 * t26 - 0.8e1 * t45 - 0.16e2 * (0.2e1 * t48 - t30 + 0.8e1 * t29 - s + 0.8e1) * t53 * t56 * t57 + 0.4e1 * (t63 - t65 + t66 + t68 + t69 - t22 - t70 + 0.32e2) * t53 * t74 + 0.4e1 * (t63 + t65 - t66 + t68 + t69 + t22 + t70 - 0.32e2) * t56 * t80) * t11 * t91 + (0.2e1 * s * (t30 - t93 - s + 0.4e1) * t23 + 0.2e1 * s * (t30 + t93 - s + 0.4e1) * t26 - 0.4e1 * t104 + 0.8e1 * t31 * t6 * t8 - 0.8e1 * (0.8e1 * t48 - 0.3e1 * t64 - 0.4e1 * t30 + 0.32e2 * t29 + t113 - 0.20e2 * s + 0.32e2) * t53 * t117 * t56 * t57 + 0.2e1 * t136 * t53 * t139 + 0.2e1 * t142 * t56 * t145) * t11 * t154 + (0.32e2 * s * t6 * t157 - 0.32e2 * t160 * t161 - 0.16e2 * t45 + 0.64e2 * t160 * t6 - 0.64e2 * (t29 + 0.1e1) * (t30 - s + 0.6e1) * t56 * t53 * t57 + 0.8e1 * (t63 - t174 + t66 - t67 + t175 + t113 - t176 + 0.48e2) * t53 * t74 + 0.8e1 * (t63 + t174 - t66 - t67 + t175 - t113 + t176 - 0.48e2) * t56 * t80) * t11 * t192 + (-0.16e2 * t36 * t6 * t157 - 0.16e2 * t36 * t8 * t161 - 0.8e1 * t104 - 0.16e2 * (t30 + s - 0.4e1) * t8 * t6 - 0.32e2 * (-t22 * t47 - 0.8e1 * s + t22 + 0.16e2 * t29 + 0.4e1 * t48 - t66 + 0.16e2) * t56 * t53 * t117 * t57 - 0.4e1 * t225 * t53 * t139 + 0.4e1 * t229 * t56 * t145) * t11 * t239);
}

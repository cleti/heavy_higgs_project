double Eval_V_V1 (  PS_2_2 const& ps)
{

#include "EVAL_V_PS_REFS.cpp"
  
  double t1;
  double t10;
  double t100;
  double t105;
  c_double t11;
  double t112;
  double t114;
  double t115;
  double t118;
  double t12;
  double t120;
  double t122;
  double t126;
  double t130;
  double t131;
  double t140;
  double t146;
  double t151;
  double t156;
  double t159;
  double t161;
  double t162;
  double t164;
  double t165;
  double t166;
  double t167;
  double t169;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t175;
  double t176;
  double t179;
  double t182;
  double t185;
  double t194;
  double t198;
  double t200;
  double t209;
  double t210;
  double t211;
  double t222;
  double t223;
  double t225;
  double t226;
  double t23;
  double t233;
  double t237;
  double t24;
  double t254;
  double t255;
  double t256;
  double t257;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t267;
  double t27;
  double t283;
  double t3;
  double t30;
  double t31;
  double t36;
  double t37;
  double t40;
  double t42;
  double t43;
  double t44;
  double t48;
  double t5;
  double t50;
  double t51;
  double t54;
  double t55;
  double t57;
  double t58;
  double t6;
  double t60;
  double t63;
  double t66;
  double t68;
  double t69;
  double t7;
  double t71;
  double t74;
  double t75;
  double t77;
  double t78;
  double t79;
  double t8;
  double t83;
  double t85;
  double t86;
  double t87;
  double t89;
  double t9;
  double t90;
  double t91;
  double t93;
  double t94;
  double t95;
  double t96;
  double t99;
  t1 = 0.4e1 - s;
  t3 = Z1Qg(mt2);
  t5 = beta * y;
  t6 = t5 - 0.1e1;
  t7 = 0.1e1 / t6;
  t8 = t5 + 0.1e1;
  t9 = 0.1e1 / t8;
  t10 = t7 * t9;
  t11 = DenS(s, mH, GammaH);
  t12 = RE(t11);
  t23 = s * s;
  t24 = RE(I3_0_T11_MT2_0_0_MT2_MU2_1);
  t27 = RE(I3_0_T12_MT2_0_0_MT2_MU2_1);
  t30 = s * t9;
  t31 = t30 * t7;
  t36 = t7 * t12;
  t37 = t36 * C_eps2;
  t40 = beta * beta;
  t42 = y * y;
  t43 = t40 * s * t42;
  t44 = t43 - s + 0.4e1;
  t48 = beta * s * y;
  t50 = 0.1e1 / (t48 + s - 0.2e1);
  t51 = (t43 + s - 0.2e1) * t50;
  t54 = 0.1e1 / (t48 - s + 0.2e1);
  t55 = RE(I1_MT2_MU2_0);
  t57 = t10 * t54 * t55;
  t58 = s * t44 * t51 * t57;
  t60 = RE(I3_0_T11_MT2_0_0_MT2_MU2_0);
  t63 = RE(I3_0_T12_MT2_0_0_MT2_MU2_0);
  t66 = t40 * t40;
  t68 = t42 * t42;
  t69 = t66 * s * t68;
  t71 = t40 * t42;
  t74 = t6 * t6;
  t75 = 0.1e1 / t74;
  t77 = t8 * t8;
  t78 = 0.1e1 / t77;
  t79 = RE(I2_MT2_0_MT2_MU2_0);
  t83 = t40 * beta;
  t85 = t42 * y;
  t86 = t83 * t23 * t85;
  t87 = 0.5e1 * t86;
  t89 = t40 * t23 * t42;
  t90 = 0.11e2 * t89;
  t91 = 0.8e1 * t43;
  t93 = beta * t23 * y;
  t94 = 0.7e1 * t93;
  t95 = 0.8e1 * t48;
  t96 = 0.16e2 * s;
  t99 = RE(I2_T11_0_MT2_MU2_0);
  t100 = t54 * t99;
  t105 = RE(I2_T12_0_MT2_MU2_0);
  t112 = FA0 * CF;
  t114 = 0.1e1 / 0.3141592653589793e1;
  t115 = AlphaS3 * t114;
  t118 = VF(t112 * CA2 * t115 * Bt);
  t120 = 0.2e1 * t48;
  t122 = s * (t43 - t120 - s + 0.4e1);
  t126 = (t43 + t120 - s + 0.4e1) * s;
  t130 = (t43 + s - 0.4e1) * t9;
  t131 = t130 * t7;
  t140 = t1 * t44 * t51 * t57;
  t146 = 0.1e1 / s;
  t151 = 0.3e1 * t23;
  t156 = t75 * t78 * t79;
  t159 = t23 * s;
  t161 = t83 * t159 * t85;
  t162 = 0.20e2 * t86;
  t164 = t40 * t159 * t42;
  t165 = 0.7e1 * t164;
  t166 = 0.16e2 * t89;
  t167 = 0.32e2 * t43;
  t169 = beta * t159 * y;
  t170 = 0.11e2 * t169;
  t171 = 0.52e2 * t93;
  t172 = 0.80e2 * t48;
  t173 = 0.5e1 * t159;
  t174 = 0.48e2 * t23;
  t175 = 0.144e3 * s;
  t176 = t161 + t162 - t165 - t166 + t167 + t170 - t171 + t172 - t173 + t174 - t175 + 0.128e3;
  t179 = t54 * t75 * t99;
  t182 = t161 + t162 + t165 + t166 - t167 + t170 - t171 + t172 + t173 - t174 + t175 - 0.128e3;
  t185 = t78 * t50 * t105;
  t194 = FH0 * CF;
  t198 = VF(t194 * CA2 * t115 * At);
  t200 = t36 * C_eps1;
  t209 = 0.7e1 * t89;
  t210 = 0.24e2 * t48;
  t211 = 0.32e2 * s;
  t222 = RE(I3_MT2_0_T11_0_MT2_MT2_MU2_0);
  t223 = s * t7 * t222;
  t225 = RE(I3_MT2_0_T12_0_MT2_MT2_MU2_0);
  t226 = t30 * t225;
  t233 = CFCA2 * AlphaS3;
  t237 = VF(t112 * CA * t233 * t114 * Bt);
  t254 = 0.2e1 * t66 * t159 * t68;
  t255 = 0.16e2 * t86;
  t256 = 0.36e2 * t89;
  t257 = 0.3e1 * t169;
  t258 = 0.16e2 * t93;
  t259 = 0.48e2 * t48;
  t260 = 0.3e1 * t159;
  t261 = 0.36e2 * t23;
  t262 = 0.128e3 * s;
  t263 = t254 - t161 - t255 - t164 + t256 - t167 - t257 + t258 - t259 + t260 - t261 + t262 - 0.128e3;
  t267 = t254 + t161 + t255 - t164 + t256 - t167 + t257 - t258 + t259 + t260 - t261 + t262 - 0.128e3;
  t283 = VF(t194 * CA * t233 * t114 * At);
  return(-0.64e2 * t1 * FH0 * t3 * t10 * t12 * PREF_B_At - 0.128e3 * PREF_B_Bt * t3 * FA0 * t12 * s * t10 + ((0.8e1 * t23 * t24 + 0.8e1 * t23 * t27 - 0.32e2 * t31) * t12 * C_eps1 + 0.16e2 * t30 * t37 + (-0.8e1 * t58 + 0.8e1 * t23 * t60 + 0.8e1 * t23 * t63 - 0.16e2 * (0.2e1 * t69 - t43 + 0.8e1 * t71 - s + 0.8e1) * t75 * t78 * t79 + 0.4e1 * (t87 - t90 + t91 + t94 + t95 - t23 - t96 + 0.32e2) * t75 * t100 + 0.4e1 * (t87 + t90 - t91 + t94 + t95 + t23 + t96 - 0.32e2) * t50 * t78 * t105) * t12) * t118 + ((0.2e1 * t122 * t24 + 0.2e1 * t126 * t27 + 0.8e1 * t131) * t12 * C_eps1 - 0.4e1 * t130 * t37 + (-0.4e1 * t140 + 0.2e1 * t122 * t60 + 0.2e1 * t126 * t63 - 0.8e1 * t146 * (0.8e1 * t69 - 0.3e1 * t89 - 0.4e1 * t43 + 0.32e2 * t71 + t151 - 0.20e2 * s + 0.32e2) * t156 + 0.2e1 * t146 * t176 * t179 + 0.2e1 * t182 * t146 * t185 + 0.8e1 * t44 * t9 * t7) * t12) * t198 + (-0.32e2 * t30 * t200 + (0.64e2 * t31 - 0.64e2 * (t71 + 0.1e1) * (t43 - s + 0.6e1) * t156 + 0.8e1 * (t87 - t209 + t91 - t93 + t210 + t151 - t211 + 0.48e2) * t75 * t100 + 0.8e1 * (t87 + t209 - t91 - t93 + t210 - t151 + t211 - 0.48e2) * t78 * t50 * t105 + 0.32e2 * t223 - 0.32e2 * t226 - 0.16e2 * t58) * t12) * t237 + (-0.16e2 * t1 * t9 * t200 + (-0.16e2 * t131 - 0.32e2 * t146 * (-t23 * t66 * t68 - 0.8e1 * s + t23 + 0.4e1 * t69 + 0.16e2 * t71 - t91 + 0.16e2) * t156 - 0.4e1 * t263 * t146 * t179 + 0.4e1 * t267 * t146 * t185 - 0.16e2 * t5 * t223 - 0.16e2 * t5 * t226 - 0.8e1 * t140) * t12) * t283);
}

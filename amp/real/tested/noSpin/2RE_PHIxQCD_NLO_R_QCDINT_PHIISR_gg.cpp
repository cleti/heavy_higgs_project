double Eval_R_INT_ISR (AMP_2_3_ARGS)
{

  AMP_2_3_4VEC_REFS(ps);

  double t1;
  double t10;
  double t102;
  double t103;
  double t111;
  double t12;
  double t121;
  double t122;
  double t123;
  double t128;
  double t13;
  double t131;
  double t136;
  double t14;
  double t144;
  double t145;
  double t146;
  double t147;
  double t148;
  double t149;
  double t15;
  double t156;
  double t159;
  double t160;
  double t166;
  double t167;
  double t168;
  double t169;
  double t170;
  double t171;
  double t172;
  double t173;
  double t175;
  double t18;
  double t181;
  double t19;
  double t194;
  double t196;
  double t2;
  double t200;
  double t204;
  double t21;
  double t214;
  double t215;
  double t216;
  double t223;
  double t23;
  double t230;
  double t236;
  double t24;
  double t248;
  double t25;
  double t251;
  double t254;
  double t255;
  double t256;
  double t258;
  double t259;
  double t26;
  double t261;
  double t263;
  double t266;
  double t269;
  double t27;
  double t277;
  double t28;
  double t280;
  double t285;
  double t286;
  double t29;
  double t30;
  double t302;
  double t303;
  double t31;
  double t319;
  double t320;
  double t321;
  double t322;
  double t324;
  double t33;
  double t331;
  double t332;
  double t339;
  double t34;
  double t340;
  double t341;
  double t342;
  double t349;
  double t35;
  double t350;
  double t357;
  double t358;
  double t359;
  double t36;
  double t371;
  double t38;
  double t382;
  c_double t4;
  double t40;
  double t405;
  double t406;
  double t41;
  double t412;
  double t413;
  double t42;
  double t421;
  double t43;
  double t44;
  double t440;
  double t442;
  double t45;
  double t451;
  double t452;
  double t453;
  double t456;
  double t459;
  double t461;
  double t462;
  double t466;
  double t473;
  double t475;
  double t48;
  double t485;
  double t49;
  double t5;
  double t50;
  double t500;
  double t51;
  double t512;
  double t519;
  double t52;
  double t526;
  double t527;
  double t530;
  double t531;
  double t533;
  double t534;
  double t54;
  double t543;
  double t544;
  double t546;
  double t547;
  double t55;
  double t551;
  double t554;
  double t555;
  double t556;
  double t56;
  double t564;
  double t566;
  double t568;
  double t569;
  double t57;
  double t574;
  double t575;
  double t582;
  double t583;
  double t585;
  double t61;
  double t612;
  double t62;
  double t623;
  double t624;
  double t630;
  double t631;
  double t64;
  double t641;
  double t65;
  double t654;
  double t66;
  double t660;
  double t675;
  double t677;
  double t68;
  double t687;
  double t69;
  double t690;
  double t7;
  double t713;
  double t715;
  double t716;
  double t717;
  double t732;
  double t751;
  double t8;
  double t804;
  double t856;
  double t858;
  double t860;
  double t862;
  double t863;
  double t864;
  double t866;
  double t881;
  double t89;
  double t9;
  double t90;
  double t91;
  double t92;
  double t93;
  double t94;
  double t95;
  double t98;
  double t99;
  t1 = sp(p1, k1);
  t2 = t1 * t1;
  t4 = DenS(k1 + k2, mH, GammaH);
  t5 = RE(t4);
  t7 = sp(p2, k1);
  t8 = 0.1e1 / t7;
  t9 = sp(p1, k2);
  t10 = 0.1e1 / t9;
  t12 = sp(p2, p1);
  t13 = t12 * t12;
  t14 = 0.1e1 / t13;
  t15 = t8 * t10 * t14;
  t18 = sp(p2, k2);
  t19 = 0.1e1 / t18;
  t21 = t5 * t19 * t14;
  t23 = sp(p3, p2);
  t24 = 0.1e1 / t23;
  t25 = t5 * t24;
  t26 = sp(p3, p1);
  t27 = 0.1e1 / t26;
  t28 = t5 * t27;
  t29 = t25 + t28;
  t30 = 0.512e3 * t29;
  t31 = 0.1e1 / t12;
  t33 = t26 * t5;
  t34 = t33 * t24;
  t35 = t23 * t5;
  t36 = t35 * t27;
  t38 = -0.256e3 * t34 - 0.256e3 * t36;
  t40 = t26 - t23;
  t41 = t5 * t40;
  t42 = t26 + t23;
  t43 = 0.1e1 / t42;
  t44 = t41 * t43;
  t45 = t27 * t24;
  t48 = 0.128e3 * t44 * t45 * t12;
  t49 = t26 * t26;
  t50 = t26 * t23;
  t51 = t23 * t23;
  t52 = 0.2e1 * t51;
  t54 = t5 * (t49 + t50 + t52);
  t55 = t42 * t42;
  t56 = 0.1e1 / t55;
  t57 = t56 * t24;
  t61 = sp(p3, k1);
  t62 = t45 * t61;
  t64 = 0.256e3 * t42 * t5 * t62;
  t65 = 0.2e1 * t49;
  t66 = 0.3e1 * t50;
  t68 = (t65 + t66 - t51) * t5;
  t69 = t43 * t27;
  t89 = t49 * t26;
  t90 = 0.2e1 * t89;
  t91 = t49 * t23;
  t92 = 0.4e1 * t91;
  t93 = t26 * t51;
  t94 = 0.5e1 * t93;
  t95 = t51 * t23;
  t98 = t56 * t27;
  t99 = t98 * t24;
  t102 = 0.5e1 * t50;
  t103 = 0.5e1 * t51;
  t111 = t51 * t5;
  t121 = 0.5e1 * t91;
  t122 = 0.4e1 * t93;
  t123 = 0.2e1 * t95;
  t128 = 0.5e1 * t49;
  t131 = t43 * t24;
  t136 = t49 * t5;
  t144 = 0.128e3 * t44 * t45 * t13;
  t145 = t44 * t62;
  t146 = 0.256e3 * t145;
  t147 = 0.3e1 * t89;
  t148 = 0.3e1 * t93;
  t149 = 0.7e1 * t95;
  t156 = t61 * t61;
  t159 = 0.256e3 * t28 * t24 * t156;
  t160 = 0.2e1 * t91;
  t166 = 0.4e1 * t89;
  t167 = 0.12e2 * t91;
  t168 = 0.12e2 * t93;
  t169 = 0.4e1 * t95;
  t170 = t49 * t49;
  t171 = t49 * t51;
  t172 = 0.12e2 * t171;
  t173 = t95 * t26;
  t175 = t51 * t51;
  t181 = t131 * t61;
  t194 = t7 * t7;
  t196 = t19 * t14;
  t200 = t5 * (t65 + t50 + t51);
  t204 = (t49 - t66 - t52) * t5;
  t214 = 0.7e1 * t89;
  t215 = 0.3e1 * t91;
  t216 = 0.3e1 * t95;
  t223 = 0.2e1 * t93;
  t230 = t89 * t23;
  t236 = t69 * t61;
  t248 = 0.1e1 / t1;
  t251 = EPS_(k1, p1, p2, p3);
  t254 = CA * CA;
  t255 = FA0 * CF * t254;
  t256 = AlphaS * AlphaS;
  t258 = t256 * AlphaS * 0.3141592653589793e1;
  t259 = t258 * At;
  t261 = VF(t255 * t259);
  t263 = t13 * t5;
  t266 = 0.3e1 * t51;
  t269 = t69 * t12;
  t277 = t40 * (t65 + t50 + t52);
  t280 = 0.64e2 * t277 * t28 * t31;
  t285 = 0.3e1 * t26;
  t286 = t285 - t23;
  t302 = 0.3e1 * t23;
  t303 = t26 - t302;
  t319 = 0.64e2 * t277 * t25 * t31;
  t320 = 0.128e3 * t145;
  t321 = t5 * t43;
  t322 = 0.256e3 * t321;
  t324 = t13 * t12;
  t331 = 0.3e1 * t49;
  t332 = 0.4e1 * t50;
  t339 = 0.3e1 * t170;
  t340 = 0.6e1 * t230;
  t341 = 0.2e1 * t173;
  t342 = 0.3e1 * t175;
  t349 = 0.6e1 * t93;
  t350 = 0.5e1 * t95;
  t357 = 0.2e1 * t170;
  t358 = 0.5e1 * t230;
  t359 = 0.2e1 * t175;
  t371 = t5 * t31;
  t382 = t131 * t12;
  t405 = 0.2e1 * t230;
  t406 = 0.6e1 * t173;
  t412 = 0.5e1 * t89;
  t413 = 0.6e1 * t91;
  t421 = 0.5e1 * t173;
  t440 = t258 * Bt;
  t442 = VF(t255 * t440);
  t451 = 0.256e3 * t28;
  t452 = t49 + t51;
  t453 = t5 * t452;
  t456 = 0.256e3 * t453 * t69 * t31;
  t459 = 0.128e3 * t111 * t14 * t27;
  t461 = 0.64e2 * t41 * t269;
  t462 = t40 * t56;
  t466 = 0.128e3 * t68 * t236;
  t473 = t5 * t14;
  t475 = 0.128e3 * t50 * t473;
  t485 = t331 + t66 + t52;
  t500 = 0.256e3 * t50 * t5;
  t512 = 0.256e3 * t131 * t31 * t453 - 0.128e3 * t136 * t14 * t24 - 0.256e3 * t25;
  t519 = 0.64e2 * t5 * (t49 + 0.6e1 * t50 + t51) * t69 * t24;
  t526 = 0.256e3 * t41 * t452 * t98 * t24 * t61;
  t527 = t40 * t40;
  t530 = 0.128e3 * t5 * t527 * t56;
  t531 = t43 * t61;
  t533 = 0.256e3 * t41 * t531;
  t534 = 0.2e1 * t23;
  t543 = 0.64e2 * t145;
  t544 = 0.128e3 * t321;
  t546 = (t543 + t544) * t13;
  t547 = 0.2e1 * t26;
  t551 = t98 * t61;
  t554 = 0.4e1 * t49;
  t555 = 0.8e1 * t50;
  t556 = 0.4e1 * t51;
  t564 = t5 * (t49 + t66 - t52);
  t566 = t45 * t156;
  t568 = 0.128e3 * t564 * t43 * t566;
  t569 = 0.2e1 * t50;
  t574 = 0.10e2 * t230;
  t575 = 0.18e2 * t171;
  t582 = 0.2e1 * t171;
  t583 = 0.7e1 * t173;
  t585 = t5 * (t166 + t92 - t122 - t169 + t357 + t230 + t582 - t583 - t359);
  t612 = t65 + t66 + t266;
  t623 = 0.7e1 * t171;
  t624 = 0.5e1 * t175;
  t630 = 0.5e1 * t170;
  t631 = 0.10e2 * t173;
  t641 = 0.7e1 * t230;
  t654 = 0.64e2 * t41 * t382;
  t660 = 0.128e3 * t204 * t181;
  t675 = (-t543 + t544) * t13;
  t677 = t57 * t61;
  t687 = t5 * (t65 - t66 - t51);
  t690 = 0.128e3 * t687 * t43 * t566;
  t713 = 0.128e3 * t321 * t324;
  t715 = 0.128e3 * t44 * t566;
  t716 = 0.4e1 * t26;
  t717 = 0.4e1 * t23;
  t732 = 0.128e3 * t44 * t45 * t156 * t61;
  t751 = 0.256e3 * t41 * t43 * t156;
  t804 = t5 * (t166 + t92 - t122 - t169 + t357 + t641 - t582 - t173 - t359);
  t856 = FH0 * CF * t254;
  t858 = VF(t856 * t259);
  t860 = 0.96e2 * t29;
  t862 = 0.96e2 * t36;
  t863 = 0.96e2 * t34;
  t864 = 0.64e2 * t5;
  t866 = 0.32e2 * t33 + 0.32e2 * t35;
  t881 = VF(t856 * t440);
  return((-0.256e3 * t2 * t5 * t15 + (0.256e3 * t21 + (t30 * t31 + t38 * t14 + (-t48 + 0.256e3 * t54 * t57 + (0.128e3 * t68 * t69 + t64) * t31 - 0.256e3 * t33 * t14) * t8) * t10) * t1 + (-t38 * t14 - t30 * t31) * t19 * t7 + (-t48 + 0.256e3 * t5 * (t90 + t92 + t94 + t95) * t99 + (-t64 - 0.128e3 * (t65 + t102 + t103) * t5 * t69) * t31 + (0.256e3 * t111 * t27 + 0.512e3 * t33) * t14) * t19 + (-0.256e3 * t7 * t5 * t14 - t48 - 0.256e3 * t5 * (t89 + t121 + t122 + t123) * t99 + (t64 + 0.128e3 * (t128 + t102 + t52) * t5 * t131) * t31 + (-0.256e3 * t136 * t24 - 0.512e3 * t35) * t14 + (t144 + (t146 - 0.64e2 * t5 * (t147 - t91 - t148 - t149) * t99) * t12 - t159 - 0.256e3 * t5 * (t147 + t160 + t93 - t123) * t56 * t62 + 0.64e2 * t5 * (-t166 - t167 - t168 - t169 + t170 - t172 - 0.12e2 * t173 - 0.9e1 * t175) * t99 + (0.256e3 * t54 * t181 + 0.64e2 * t5 * (t49 - t103) * t43) * t31) * t8) * t10 + (0.256e3 * t194 * t5 * t196 + (-t48 - 0.256e3 * t200 * t98 + (0.128e3 * t131 * t204 - t64) * t31 + 0.256e3 * t35 * t14) * t19 * t7 + (t144 + (t146 - 0.64e2 * t5 * (t214 + t215 + t93 - t216) * t99) * t12 + t159 - 0.256e3 * t5 * (t90 - t91 - t223 - t216) * t56 * t62 + 0.64e2 * t5 * (t166 + t167 + t168 + t169 + 0.9e1 * t170 + 0.12e2 * t230 + t172 - t175) * t99 + (-0.256e3 * t200 * t236 + 0.64e2 * t5 * (t128 - t51) * t43) * t31) * t19) * t248) * t251 * t261 + ((-0.128e3 * t263 * t27 + 0.64e2 * t5 * (t49 + t266) * t269 - 0.64e2 * t5 * (t89 + t91 - t93 + t216) * t69 - t280) * t8 * t10 * t1 + (-0.128e3 * t5 * t286 * t69 * t13 + 0.64e2 * t5 * (t214 - t91 + t94 - t216) * t98 * t12 - 0.64e2 * t5 * (t147 - t91 + t94 - t216) * t69 + t280) * t19 + (0.128e3 * t5 * t303 * t131 * t13 - 0.64e2 * t5 * (t147 - t121 + t93 - t149) * t57 * t12 + 0.64e2 * t5 * (t147 - t121 + t93 - t216) * t131 - t319 + ((-t320 + t322) * t324 + (0.64e2 * t5 * (t147 + t215 + t94 - t216) * t56 * t62 - 0.128e3 * t5 * (t331 + t332 + t103) * t56) * t13 + (-0.64e2 * t5 * (t339 + t340 + t341 - t342) * t56 * t62 + 0.128e3 * t5 * (t166 + 0.9e1 * t91 + t349 + t350) * t56) * t12 + 0.64e2 * t5 * (t357 + t358 - t173 - t359) * t43 * t62 - 0.128e3 * t5 * (t90 + t121 + t223 + t216) * t43 + 0.128e3 * (t49 + t52) * t23 * t371) * t8) * t10 + ((-0.128e3 * t263 * t24 + 0.64e2 * t5 * (t331 + t51) * t382 - 0.64e2 * t5 * (t147 - t91 + t93 + t95) * t131 + t319) * t19 * t7 + ((t320 + t322) * t324 + (-0.64e2 * t5 * (t147 - t121 - t148 - t216) * t56 * t62 - 0.128e3 * t5 * (t128 + t332 + t266) * t56) * t13 + (0.64e2 * t5 * (t339 - t405 - t406 - t342) * t56 * t62 + 0.128e3 * t5 * (t412 + t413 + 0.9e1 * t93 + t169) * t56) * t12 - 0.64e2 * t5 * (t357 + t230 - t421 - t359) * t43 * t62 - 0.128e3 * t5 * (t147 + t160 + t94 + t123) * t43 + 0.128e3 * (t65 + t51) * t26 * t371) * t19) * t248) * t442 + (0.128e3 * t2 * t1 * t23 * t5 * t15 + (-0.128e3 * t35 * t196 + (t451 - t456 + t459 + (-t461 - 0.128e3 * t35 * t462 + (0.64e2 * t111 * t27 * t286 * t43 - t466) * t31 + t475) * t8) * t10) * t2 + ((-t451 + t456 - t459) * t19 * t7 + (-t461 - 0.128e3 * t35 * t485 * t56 * t27 + (t466 - 0.64e2 * t5 * (t90 - t160 - t94 - t350) * t69) * t31 + (-0.128e3 * t27 * t5 * t95 - t500) * t14) * t19 + (t512 * t7 + (t146 - t519) * t12 - t526 + t530 + (-t533 - 0.64e2 * t42 * (t285 + t534) * t28) * t31 + 0.256e3 * t111 * t14 + (t546 + (0.128e3 * t5 * (t547 + t23) * t40 * t551 - 0.32e2 * t5 * (t554 + t555 + t556 + t147 + t91 + t94 - t95) * t98) * t12 + t568 + 0.64e2 * t35 * (t49 - t569 + t103) * t551 - 0.32e2 * t5 * (-t166 - t92 - t122 - t169 + t339 + t574 + t575 + t406 + t342) * t98 + (-0.128e3 * t531 * t564 + 0.32e2 * t585 * t69) * t31) * t8) * t10) * t1 - t512 * t19 * t194 + ((-t146 - t519) * t12 + t526 + t530 + (t533 - 0.64e2 * (t547 + t302) * t42 * t25) * t31 + 0.256e3 * t136 * t14) * t19 * t7 + (t546 + (0.128e3 * t5 * t612 * t551 - 0.32e2 * t5 * (-t554 - t555 - t556 + t214 + t91 + t93 - t95) * t98) * t12 - t568 + 0.64e2 * t5 * (t357 + 0.4e1 * t230 - t623 - t406 - t624) * t56 * t62 + 0.32e2 * t5 * (-t166 - t92 - t122 - t169 + t630 + t405 - t582 - t631 - t342) * t98 + (0.128e3 * t5 * (t90 + t92 - t93 + t95) * t236 - 0.32e2 * t5 * (t166 + t92 - t122 - t169 + 0.10e2 * t170 + t641 + t582 - t421 - t359) * t69) * t31) * t19 + (-0.128e3 * t194 * t26 * t473 + (t654 - 0.128e3 * t33 * t612 * t24 * t56 + (-t660 + 0.64e2 * t5 * (t412 + t121 + t223 - t123) * t131) * t31 + (-0.128e3 * t24 * t5 * t89 - t500) * t14) * t7 + t675 + (0.128e3 * t5 * t485 * t677 + 0.32e2 * t5 * (t554 + t555 + t556 + t89 - t91 - t93 - t149) * t57) * t12 + t690 - 0.64e2 * t5 * (t630 + t340 + t623 - 0.4e1 * t173 - t359) * t56 * t62 - 0.32e2 * t5 * (t166 + t92 + t122 + t169 + t339 + t574 + t582 - t341 - t624) * t57 + (0.128e3 * t5 * (t89 - t91 + t122 + t123) * t181 + 0.32e2 * t5 * (t166 + t92 - t122 - t169 + t357 + t358 - t582 - t583 - 0.10e2 * t175) * t131) * t31 + (-t713 + (-t715 - 0.32e2 * t5 * (t716 - t717 + t49 + t569 + t51) * t43 * t62 + 0.64e2 * t5 * (t716 + t717 + t331 + t332 + t103) * t56) * t13 + (-t732 - 0.256e3 * t453 * t98 * t156 + 0.32e2 * t5 * (t166 - t92 + t122 - t169 + t339 + 0.14e2 * t230 + t575 + t631 + t342) * t56 * t62 - 0.64e2 * t5 * (t554 + t556 + t90 + 0.7e1 * t91 + t349 + t350) * t56) * t12 + t751 - 0.32e2 * t585 * t43 * t62 + 0.64e2 * t5 * (t554 + t555 + t556 + t215 + t223 + t216) * t43 - 0.64e2 * (t717 + t49 + t52) * t23 * t371) * t8) * t10 + (0.128e3 * t194 * t7 * t26 * t21 + (t654 + 0.128e3 * t33 * t462 + (-0.64e2 * t136 * t24 * t303 * t43 + t660) * t31 + t475) * t19 * t194 + (t675 + (-0.128e3 * t5 * (t26 + t534) * t40 * t677 + 0.32e2 * t5 * (-t554 - t555 - t556 + t89 - t121 - t93 - t216) * t57) * t12 - t690 + 0.64e2 * t33 * (t128 - t569 + t51) * t677 - 0.32e2 * t5 * (-t166 - t92 - t122 - t169 + t339 + t340 + t575 + t631 + t342) * t57 + (-0.32e2 * t131 * t804 + 0.128e3 * t531 * t687) * t31) * t19 * t7 + (-t713 + (t715 - 0.32e2 * t5 * (-t716 + t717 + t49 + t569 + t51) * t43 * t62 + 0.64e2 * t5 * (t716 + t717 + t128 + t332 + t266) * t56) * t13 + (t732 - 0.256e3 * t453 * t57 * t156 + 0.32e2 * t5 * (-t166 + t92 - t122 + t169 + t339 + t574 + t575 + 0.14e2 * t173 + t342) * t56 * t62 - 0.64e2 * t5 * (t554 + t556 + t412 + t413 + 0.7e1 * t93 + t123) * t56) * t12 - t751 + 0.32e2 * t804 * t43 * t62 + 0.64e2 * t5 * (t554 + t555 + t556 + t147 + t160 + t148) * t43 - 0.64e2 * (t716 + t65 + t51) * t26 * t371) * t19) * t248) * t858 + ((t12 * t860 + t31 * t866 - t862 - t863 - t864) * t8 * t10 + (-t12 * t860 - t31 * t866 + t862 + t863 + t864) * t19 * t248) * t251 * t881);
}

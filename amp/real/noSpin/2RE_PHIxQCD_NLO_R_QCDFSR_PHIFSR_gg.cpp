
#include "AMP_HEADER.h"

double Eval_R_FSR_FSR (AMP_ARGS)
{

  AMP_DEFINITIONS;
  HP_REFS_PHIxQCD(hp);
  AP_REFS_R(ap);

  double t1;
  double t10;
  double t100;
  double t101;
  double t103;
  double t105;
  double t106;
  double t107;
  double t108;
  double t112;
  double t113;
  double t115;
  double t119;
  double t12;
  double t126;
  double t127;
  double t13;
  double t131;
  double t133;
  double t138;
  double t139;
  double t14;
  double t141;
  double t148;
  double t149;
  double t15;
  double t150;
  double t152;
  double t154;
  double t16;
  double t160;
  double t161;
  double t163;
  double t17;
  double t170;
  double t171;
  double t173;
  double t175;
  double t180;
  double t181;
  double t183;
  double t184;
  double t185;
  double t187;
  double t19;
  double t196;
  double t198;
  double t2;
  double t201;
  double t206;
  double t208;
  double t211;
  double t212;
  double t213;
  double t215;
  double t219;
  double t22;
  double t221;
  double t222;
  double t224;
  double t227;
  double t23;
  double t232;
  double t234;
  double t235;
  double t237;
  double t242;
  double t245;
  double t248;
  double t25;
  double t252;
  double t256;
  double t257;
  double t26;
  double t260;
  double t265;
  double t266;
  double t268;
  double t27;
  double t271;
  double t272;
  double t273;
  double t280;
  double t282;
  double t285;
  double t288;
  double t290;
  double t293;
  double t298;
  double t30;
  double t302;
  double t303;
  double t305;
  double t306;
  double t31;
  double t321;
  double t324;
  double t331;
  double t338;
  double t339;
  double t34;
  double t340;
  double t35;
  double t356;
  double t357;
  double t359;
  double t36;
  double t362;
  double t366;
  double t368;
  double t371;
  double t372;
  double t373;
  double t376;
  double t385;
  double t386;
  double t388;
  double t4;
  double t413;
  double t417;
  double t418;
  double t42;
  double t420;
  double t424;
  double t427;
  double t428;
  double t43;
  double t430;
  double t435;
  double t439;
  double t44;
  double t440;
  double t441;
  double t445;
  double t450;
  double t455;
  double t457;
  double t46;
  double t462;
  double t463;
  double t47;
  double t476;
  double t477;
  double t48;
  double t5;
  double t50;
  double t514;
  double t55;
  double t551;
  double t553;
  double t558;
  double t559;
  double t56;
  double t564;
  double t565;
  double t574;
  double t575;
  double t577;
  double t58;
  double t581;
  double t585;
  double t587;
  double t588;
  double t590;
  double t593;
  double t6;
  double t605;
  double t607;
  double t610;
  double t611;
  double t614;
  double t623;
  double t627;
  double t63;
  double t636;
  double t641;
  double t647;
  double t652;
  double t656;
  double t662;
  double t666;
  double t668;
  double t67;
  double t670;
  double t672;
  double t676;
  double t679;
  double t68;
  double t680;
  double t681;
  double t687;
  double t69;
  double t693;
  double t698;
  double t7;
  double t70;
  double t702;
  double t705;
  double t711;
  double t712;
  double t718;
  double t72;
  double t726;
  double t74;
  double t749;
  double t76;
  double t769;
  double t772;
  double t777;
  double t79;
  double t8;
  double t80;
  double t803;
  double t816;
  double t817;
  double t82;
  double t84;
  double t854;
  double t857;
  double t858;
  double t859;
  double t86;
  double t861;
  double t868;
  double t878;
  double t882;
  double t884;
  double t885;
  double t888;
  double t897;
  double t9;
  double t900;
  double t908;
  double t910;
  double t912;
  double t918;
  double t93;
  double t94;
  double t97;
  double t99;
  t1 = sp(p2, p3);
  t2 = sp(p1, p3);
  t4 = 0.1e1 / (t1 + t2);
  t5 = sp(k2, p3);
  t6 = 0.1e1 / t5;
  t7 = t4 * t6;
  t8 = sp(k2, p2);
  t9 = 0.1e1 / t8;
  t10 = t7 * t9;
  t12 = sp(k2, p1);
  t13 = 0.1e1 / t12;
  t14 = t7 * t13;
  t15 = 0.128e3 * t14;
  t16 = t6 + t4;
  t17 = 0.128e3 * t16;
  t19 = -t17;
  t22 = sp(k1, p3);
  t23 = 0.1e1 / t22;
  t25 = 0.128e3 * t7;
  t26 = t4 - t6;
  t27 = 0.128e3 * t26;
  t30 = sp(k1, p2);
  t31 = 0.1e1 / t30;
  t34 = sp(k1, p1);
  t35 = t34 * t34;
  t36 = t35 * t34;
  t42 = t12 * t4;
  t43 = t6 * t9;
  t44 = t42 * t43;
  t46 = 0.768e3 * t7;
  t47 = 0.640e3 * t4;
  t48 = 0.3e1 * t1;
  t50 = (0.4e1 + t2 + t48) * t4;
  t55 = 0.128e3 * t4;
  t56 = 0.7e1 * t2;
  t58 = (-0.4e1 + t56 + t1) * t4;
  t63 = -t16;
  t67 = 0.512e3 * t6;
  t68 = 0.768e3 * t4;
  t69 = t5 * t4;
  t70 = 0.64e2 * t69;
  t72 = (0.4e1 + t56 + t1) * t4;
  t74 = 0.1e1 + t2;
  t76 = 0.128e3 * t74 * t6;
  t79 = 0.192e3 * t69;
  t80 = 0.5e1 * t2;
  t82 = (-0.4e1 + t80 - t1) * t4;
  t84 = 0.1e1 - t2;
  t86 = 0.384e3 * t84 * t6;
  t93 = t22 * t22;
  t94 = 0.1e1 / t93;
  t97 = t22 * t4 * t6;
  t99 = t42 * t6;
  t100 = 0.640e3 * t99;
  t101 = 0.9e1 * t2;
  t103 = (-0.4e1 + t101 - t1) * t4;
  t105 = 0.64e2 * t103 * t6;
  t106 = t5 * t5;
  t107 = 0.1e1 / t106;
  t108 = 0.128e3 * t107;
  t112 = 0.15e2 * t2;
  t113 = 0.5e1 * t1;
  t115 = (-0.4e1 + t112 + t113) * t4;
  t119 = (0.384e3 - 0.640e3 * t2) * t6;
  t126 = t93 * t4;
  t127 = t126 * t43;
  t131 = 0.512e3 * t4;
  t133 = (-0.4e1 + t80 + t1) * t4;
  t138 = 0.192e3 * t4;
  t139 = 0.3e1 * t2;
  t141 = (-0.2e1 + t139) * t4;
  t148 = t12 * t12;
  t149 = t148 * t4;
  t150 = t149 * t43;
  t152 = 0.13e2 * t2;
  t154 = (-0.4e1 + t152 + t48) * t4;
  t160 = 0.1152e4 * t4;
  t161 = 0.7e1 * t1;
  t163 = (-0.4e1 + t152 + t161) * t4;
  t170 = 0.64e2 * (t113 + 0.29e2 * t2) * t4;
  t171 = t2 * t2;
  t173 = t1 * t2;
  t175 = (-t139 + t1 + 0.6e1 * t171 + t173) * t4;
  t180 = 0.128e3 * t69;
  t181 = t48 + t56;
  t183 = 0.64e2 * t181 * t4;
  t184 = 0.5e1 * t171;
  t185 = 0.2e1 * t173;
  t187 = (-t80 - t1 + t184 + t185) * t4;
  t196 = 0.640e3 * t69;
  t198 = (-0.4e1 + t139 - t48) * t4;
  t201 = 0.1024e4 * t84 * t6;
  t206 = 0.576e3 * t69;
  t208 = (-0.4e1 + t112 - t161) * t4;
  t211 = 0.1152e4 * t84 * t6;
  t212 = t106 * t4;
  t213 = 0.128e3 * t212;
  t215 = (0.2e1 + t1 + t2) * t4;
  t219 = (t80 + t1 + t184 + t185) * t4;
  t221 = 0.256e3 * t2;
  t222 = 0.128e3 * t171;
  t224 = (-0.256e3 + t221 - t222) * t6;
  t227 = 0.64e2 * t212;
  t232 = (-t139 + t1 + 0.2e1 * t171 - t173) * t4;
  t234 = 0.768e3 * t2;
  t235 = 0.384e3 * t171;
  t237 = (-0.256e3 + t234 - t235) * t6;
  t242 = t12 * t9;
  t245 = -0.256e3 * t74;
  t248 = -0.256e3 * t84;
  t252 = t126 * t6;
  t256 = t149 * t6;
  t257 = 0.384e3 * t256;
  t260 = 0.512e3 * t107;
  t265 = 0.64e2 * (t113 + t152) * t4;
  t266 = 0.3e1 * t173;
  t268 = (t2 - t48 + t266) * t4;
  t271 = 0.512e3 * t2;
  t272 = -0.256e3 + t271;
  t273 = t272 * t107;
  t280 = 0.8e1 * t2;
  t282 = (-0.2e1 + t280 + t1) * t4;
  t285 = 0.11e2 * t171;
  t288 = (-t56 - t48 + t285 + 0.4e1 * t173) * t4;
  t290 = 0.1024e4 * t2;
  t293 = (-0.256e3 + t290 - 0.640e3 * t171) * t6;
  t298 = -0.64e2 * t127 + (-0.640e3 * t44 - 0.704e3 * t7 + (-0.64e2 * t133 * t6 + t131) * t9 + (-0.128e3 * t141 * t6 + t138) * t13) * t22 + 0.640e3 * t150 + (0.128e3 * t154 * t6 - t131) * t9 * t12 + t160 + 0.64e2 * t163 * t6 - t108 + (0.128e3 * t175 * t6 - t170 + 0.448e3 * t69) * t9 + (0.128e3 * t187 * t6 + t180 - t183) * t13 + (0.640e3 * t63 * t9 * t148 + (-0.768e3 * t6 + (t196 - 0.128e3 * t198 + t201) * t9) * t12 + t206 - 0.64e2 * t208 + t211 + (-0.128e3 * t215 * t5 - t213 + 0.128e3 * t219 + t224) * t9 + (0.64e2 * t5 * t82 - t227 - 0.128e3 * t232 + t237) * t13) * t23 + (t13 * t248 + t245 * t9 + 0.512e3 * t242 + 0.512e3) * t94 + (-0.64e2 * t252 + (t100 - t55 + t105) * t22 - t257 + (-0.128e3 * t198 * t6 - t131 + t260) * t12 + t79 - t265 + 0.128e3 * t268 * t6 + t273 + (0.384e3 * t148 * t26 + (-t196 + 0.128e3 * t154 + t201) * t12 + 0.256e3 * t212 - 0.128e3 * t282 * t5 + 0.128e3 * t288 + t293) * t23) * t31;
  t302 = t4 * t2;
  t303 = t302 * t43;
  t305 = t6 * t13;
  t306 = t302 * t305;
  t321 = 0.11e2 * t2;
  t324 = t2 * (-0.4e1 + t321 + 0.4e1 * t1);
  t331 = t2 * (-0.4e1 + t280 + t48);
  t338 = t148 * t12;
  t339 = t338 * t4;
  t340 = t339 * t43;
  t356 = t139 - t1;
  t357 = t356 * t4;
  t359 = 0.10e2 * t2;
  t362 = (t359 + 0.10e2 * t1 + t171 - t266) * t4;
  t366 = t5 * t2 * t4;
  t368 = t48 + t359;
  t371 = 0.128e3 * t2 * t368 * t4;
  t372 = 0.2e1 * t2;
  t373 = 0.2e1 * t1;
  t376 = t2 * (-t372 + t373 + t285 + 0.5e1 * t173);
  t385 = 0.128e3 * t2 * (t139 + t373) * t4;
  t386 = 0.6e1 * t2;
  t388 = t2 * (-t386 - t373 + t184 + t266);
  t413 = 0.768e3 * t171;
  t417 = t106 * t2 * t4;
  t418 = 0.128e3 * t417;
  t420 = t2 * (0.4e1 + t2 + t373);
  t424 = t2 * (t386 + t373 + t184 + t266);
  t427 = t171 * t2;
  t428 = 0.128e3 * t427;
  t430 = (-t221 + t222 - t428) * t6;
  t435 = t2 * (-0.4e1 + t372 - t1);
  t439 = t2 * (-0.2e1 + t2);
  t440 = t2 - t1;
  t441 = t440 * t4;
  t445 = (-t221 + t235 - t428) * t6;
  t450 = t148 * t9;
  t455 = -t221 - t222;
  t457 = -t221 + t222;
  t462 = -t302 * t6 - t99;
  t463 = 0.128e3 * t462;
  t476 = t339 * t6;
  t477 = 0.128e3 * t476;
  t514 = 0.64e2 * t82 * t6;
  t551 = 0.1e1 / t34;
  t553 = (-0.128e3 * t10 + t15 + (t13 * t19 + t17 * t9) * t23 + (t23 * t27 - t25) * t31) * t36 + (t22 * (0.192e3 * t10 - 0.64e2 * t14) + 0.384e3 * t44 + t46 + (-0.64e2 * t50 * t6 - t47) * t9 + (0.64e2 * t58 * t6 - t55) * t13 + (0.384e3 * t63 * t9 * t12 - t67 - t68 + (-t70 + 0.64e2 * t72 + t76) * t9 + (t79 - 0.64e2 * t82 + t86) * t13) * t23 + (-0.128e3 * t9 + 0.128e3 * t13) * t94 + (0.192e3 * t97 - t100 + t55 - t105 + t108 + (0.640e3 * t12 * t26 + 0.64e2 * t115 + t119 - 0.320e3 * t69) * t23) * t31) * t35 + t298 * t34 + (0.256e3 * t44 + 0.320e3 * t7 + 0.128e3 * t303 + 0.192e3 * t306) * t93 + (-0.320e3 * t150 + (0.576e3 * t7 + (-0.128e3 * t282 * t6 + t138) * t9) * t12 - 0.64e2 * t6 - 0.576e3 * t4 + (-0.64e2 * t324 * t7 + 0.640e3 * t302) * t9 + (-0.64e2 * t331 * t7 + 0.320e3 * t302) * t13) * t22 + 0.128e3 * t340 + (-t46 + (0.64e2 * t115 * t6 + t55) * t9) * t148 + (t160 - 0.64e2 * t208 * t6 + t260 + (0.128e3 * t288 * t6 - t180 - t265) * t9) * t12 - t206 + 0.384e3 * t357 - 0.128e3 * t362 * t6 + t273 + (0.64e2 * t376 * t7 + 0.384e3 * t366 - t371) * t9 + (0.64e2 * t388 * t7 + 0.64e2 * t366 - t385) * t13 + (t19 * t9 * t338 + (t68 - t67 + (t79 - 0.64e2 * t103 + t119) * t9) * t148 + (-0.704e3 * t69 + 0.64e2 * t163 + t211 + (0.64e2 * t103 * t5 - t227 + 0.128e3 * t268 + t293) * t9) * t12 + 0.320e3 * t212 - 0.64e2 * t5 - 0.128e3 * t362 + (-0.512e3 + 0.2048e4 * t2 - t413) * t6 + (0.64e2 * t4 * t424 - 0.64e2 * t420 * t69 - t418 + t430) * t9 + (0.64e2 * t435 * t69 - 0.64e2 * t439 * t441 - 0.64e2 * t417 + t445) * t13) * t23 + (0.128e3 * t450 + (t272 * t9 - 0.128e3) * t12 - 0.256e3 + t271 + t455 * t9 + t457 * t13) * t94 + (t463 * t93 + (-0.64e2 * t256 + (-0.128e3 * t215 * t6 + 0.448e3 * t4) * t12 + 0.384e3 * t302 - 0.64e2 * t420 * t7) * t22 + t477 + (0.64e2 * t6 * t72 - t108 - t47) * t148 + (t107 * t245 + 0.128e3 * t219 * t6 - t170 + 0.512e3 * t69) * t12 + 0.640e3 * t366 - t371 + 0.64e2 * t424 * t7 + t455 * t107 + (-t338 * t27 + (t79 - 0.64e2 * t50 + t76) * t148 + (-0.64e2 * t133 * t5 + 0.128e3 * t175 + t224 - t227) * t12 + t418 - 0.64e2 * t324 * t69 + 0.64e2 * t376 * t4 + t430) * t23) * t31 + (0.64e2 * t462 * t93 + (0.192e3 * t256 + (t55 + t514) * t12 + 0.64e2 * t302 + 0.64e2 * t435 * t7) * t22 - t477 + (-t55 - t514 + t108) * t148 + (t107 * t248 - 0.128e3 * t232 * t6 - t183 + t79) * t12 + 0.320e3 * t366 - t385 - 0.64e2 * t439 * t441 * t6 + t457 * t107 + (t338 * t27 + (-t70 + 0.64e2 * t58 + t86) * t148 + (-0.128e3 * t141 * t5 + 0.128e3 * t187 + t237) * t12 + 0.192e3 * t417 - 0.64e2 * t331 * t69 + 0.64e2 * t388 * t4 + t445) * t23) * t551;
  t558 = 0.256e3 * t16;
  t559 = t558 * t9;
  t564 = -t26;
  t565 = 0.256e3 * t564;
  t574 = 0.768e3 * t44;
  t575 = 0.512e3 * t7;
  t577 = (t48 + t321) * t4;
  t581 = (t1 + t80) * t4;
  t585 = 0.768e3 * t16 * t9;
  t587 = 0.1024e4 * t6;
  t588 = 0.384e3 * t69;
  t590 = (t80 - t48) * t4;
  t593 = (-0.256e3 + t234) * t6;
  t605 = 0.768e3 * t99;
  t607 = (-t1 + t56) * t4;
  t610 = 0.256e3 * t107;
  t611 = 0.768e3 * t564;
  t614 = (t101 + t1) * t4;
  t623 = t368 * t4;
  t627 = (0.128e3 * t6 * t623 - 0.128e3 * t4) * t9;
  t636 = (t161 + t321) * t4;
  t641 = t2 * (t161 + 0.17e2 * t2);
  t647 = t2 * (t1 + t139);
  t652 = 0.768e3 * t69;
  t656 = (-0.512e3 + 0.1536e4 * t2) * t6;
  t662 = (t139 + t161) * t4;
  t666 = (-0.768e3 + 0.2304e4 * t2) * t6;
  t668 = (t386 - t1) * t4;
  t670 = 0.128e3 * t668 * t5;
  t672 = t2 * (-t161 + t139);
  t676 = (-t271 + t413) * t6;
  t679 = 0.128e3 * t366;
  t680 = t2 * t440;
  t681 = t680 * t4;
  t687 = t2 * t9;
  t693 = t668 * t6;
  t698 = t357 * t6;
  t702 = t680 * t7;
  t705 = 0.512e3 * t2 * t107;
  t711 = 0.128e3 * t623 * t5;
  t712 = t647 * t4;
  t718 = -0.128e3 * t127 + (t574 + t25 + t627 + 0.128e3 * t306) * t22 - 0.768e3 * t150 - 0.512e3 * t581 * t43 * t12 - 0.128e3 * t636 * t6 - t610 + (-0.128e3 * t641 * t7 + t180 + 0.512e3) * t9 - 0.128e3 * t647 * t14 + (t585 * t148 + (0.1536e4 * t6 + (-t652 + 0.512e3 * t357 + t656) * t9) * t12 - t180 - 0.128e3 * t662 + t666 + (0.128e3 * t4 * t672 + t213 - t670 + t676) * t9 + (-t679 + 0.128e3 * t681 + t676) * t13) * t23 + (-0.512e3 * t13 * t2 - 0.512e3 * t242 - 0.512e3 * t687 - 0.512e3) * t94 + (0.128e3 * t252 + (-t605 + t55 - 0.128e3 * t693) * t22 + 0.768e3 * t256 + (0.512e3 * t698 - 0.512e3 * t107) * t12 - t180 + 0.512e3 + 0.640e3 * t702 - t705 + (t148 * t611 + (t652 - 0.512e3 * t581 + t656) * t12 - t213 + t711 - 0.640e3 * t712 + t676) * t23) * t31;
  t726 = t2 * t181;
  t749 = t171 * (t1 + t372);
  t769 = t2 * t356;
  t772 = t4 * t1;
  t777 = (-0.256e3 * t171 + 0.256e3 * t427) * t6;
  t803 = 0.256e3 * t476;
  t816 = 0.256e3 * t171 * t107;
  t817 = t338 * t565;
  t854 = (-0.256e3 * t10 - 0.256e3 * t14 + (t13 * t558 + t559) * t23 + (t23 * t565 + 0.256e3 * t7) * t31) * t36 + (t22 * (0.384e3 * t10 + t15) - t574 - t575 - 0.128e3 * t577 * t43 - 0.128e3 * t581 * t305 + (t585 * t12 + t131 + t587 + (-t588 + 0.128e3 * t590 + t593) * t9 + (-t180 + 0.128e3 * t357 + t593) * t13) * t23 + (-0.256e3 * t9 - 0.256e3 * t13) * t94 + (-0.384e3 * t97 + t605 + 0.128e3 * t607 * t6 - t610 + (t12 * t611 + t588 + t593 - 0.128e3 * t614) * t23) * t31) * t35 + t718 * t34 + (-0.128e3 * t44 - 0.128e3 * t303) * t93 + (0.384e3 * t150 + (-t25 + t627) * t12 + (0.128e3 * t7 * t726 - 0.128e3 * t302) * t9) * t22 - 0.256e3 * t340 + (-0.128e3 * t43 * t614 + t575) * t148 + (-0.128e3 * t662 * t6 - t260 + (-0.640e3 * t647 * t7 + t180 + 0.512e3) * t9) * t12 - 0.768e3 * t6 * t2 - t705 + (-0.512e3 * t7 * t749 + t271 + t679) * t9 + (t559 * t338 + (-t131 + t587 + (-t588 + 0.128e3 * t607 + t593) * t9) * t148 + (t180 - 0.128e3 * t636 + t666 + (t213 - t670 + 0.640e3 * t681 + t676) * t9) * t12 - t234 + (-t290 + 0.1536e4 * t171) * t6 + (-0.512e3 * t171 * t772 - 0.128e3 * t69 * t769 + t418 + t777) * t9 + t777 * t13) * t23 + (-0.256e3 * t450 + (-0.256e3 - 0.512e3 * t687) * t12 - t271 - 0.256e3 * t171 * t9 - 0.256e3 * t171 * t13) * t94 + (-t463 * t93 + (-t257 + (0.128e3 * t4 - 0.128e3 * t693) * t12 + 0.128e3 * t302 - 0.128e3 * t769 * t7) * t22 + t803 + (0.128e3 * t590 * t6 - t610) * t148 + (0.128e3 * t672 * t7 - t180 - t705 + 0.512e3) * t12 - t679 + t271 - 0.512e3 * t772 * t171 * t6 - t816 + (t817 + (t588 - 0.128e3 * t577 + t593) * t148 + (-0.128e3 * t4 * t641 - t213 + t676 + t711) * t12 - t418 + 0.128e3 * t726 * t69 - 0.512e3 * t749 * t4 + t777) * t23) * t31 + ((-0.128e3 * t12 * t2 * t7 - 0.128e3 * t256) * t22 + t803 + (0.128e3 * t698 - t610) * t148 + (0.128e3 * t702 - t705) * t12 - t816 + (t817 + (t180 - 0.128e3 * t581 + t593) * t148 + (t679 - 0.128e3 * t712 + t676) * t12 + t777) * t23) * t551;
  t857 = EPS_(k1, k2, p1, p3);
  t858 = t857 * t4;
  t859 = t858 * t43;
  t861 = t858 * t305;
  t868 = t858 * t6;
  t878 = t12 * t857;
  t882 = 0.256e3 * t858;
  t884 = (t48 + t80) * t4;
  t885 = t857 * t6;
  t888 = 0.128e3 * t884 * t885 - t882;
  t897 = t5 * t857 * t4;
  t900 = -0.128e3 * t441 * t857 + 0.128e3 * t897;
  t908 = 0.128e3 * t22 * t857 * t7;
  t910 = 0.256e3 * t878 * t7;
  t912 = 0.128e3 * t441 * t885;
  t918 = -0.256e3 * t4 * t878 - 0.128e3 * t857 * t884 + 0.384e3 * t897;
  return(At_fH_re * t553 * PREF_R_CF + Bt_fA_re * t854 * PREF_R_CF + At_fA_re * ((0.256e3 * t859 - 0.256e3 * t861 + (0.256e3 * t13 * t858 - 0.256e3 * t858 * t9) * t23 + (-0.256e3 * t23 * t858 + 0.256e3 * t868) * t31) * t34 + (-0.384e3 * t859 + 0.384e3 * t861) * t22 + 0.256e3 * t878 * t10 - 0.512e3 * t868 + t888 * t9 - t888 * t13 + (-0.256e3 * t4 * t878 * t9 - t13 * t900 + t9 * t900 + 0.512e3 * t858) * t23 + (t23 * t918 + t882 - t908 + t910 + t912) * t31 + (-t23 * t918 - t882 + t908 - t910 - t912) * t551) * PREF_R_CF);
}


#include "AMP_HEADER.h"

double Eval_R_FSR_INT (AMP_ARGS)
{

AMP_DEFINITIONS


  double t1;
  double t10;
  double t102;
  double t111;
  double t12;
  double t124;
  double t128;
  double t13;
  double t130;
  double t131;
  double t133;
  double t14;
  double t141;
  double t155;
  double t164;
  double t167;
  double t168;
  double t170;
  double t171;
  double t172;
  double t18;
  double t180;
  double t182;
  double t183;
  double t19;
  double t195;
  double t197;
  double t199;
  double t2;
  double t20;
  double t200;
  double t210;
  double t228;
  double t229;
  double t23;
  double t232;
  double t236;
  double t24;
  double t241;
  double t254;
  double t255;
  double t26;
  double t27;
  double t271;
  double t273;
  double t274;
  double t276;
  double t277;
  double t285;
  double t29;
  double t293;
  double t297;
  double t3;
  double t30;
  double t308;
  double t310;
  double t323;
  double t324;
  double t329;
  double t33;
  double t330;
  double t338;
  double t339;
  double t34;
  double t345;
  double t346;
  double t355;
  double t356;
  double t362;
  double t369;
  double t373;
  double t378;
  double t386;
  double t392;
  double t4;
  double t40;
  double t403;
  double t404;
  double t405;
  double t406;
  double t408;
  double t410;
  double t416;
  double t43;
  double t44;
  double t448;
  double t45;
  double t46;
  double t47;
  double t48;
  double t49;
  double t5;
  double t502;
  double t507;
  double t508;
  double t51;
  double t514;
  double t515;
  double t516;
  double t528;
  double t54;
  double t543;
  double t553;
  double t555;
  double t561;
  double t58;
  double t59;
  double t6;
  double t68;
  double t69;
  double t70;
  double t71;
  double t72;
  double t73;
  double t74;
  double t75;
  double t76;
  double t79;
  double t8;
  double t85;
  double t86;
  double t89;
  double t9;
  double t90;
  double t91;
  double t94;
  double t97;
  double t99;
  t1 = EPS_(k2, p1, p2, p3);
  t2 = 0.128e3 * t1;
  t3 = sp(p1, p3);
  t4 = t1 * t3;
  t5 = sp(p2, p3);
  t6 = t1 * t5;
  t8 = 0.64e2 * t4 + 0.64e2 * t6;
  t9 = sp(p1, p2);
  t10 = 0.1e1 / t9;
  t12 = t10 * t8 - t2;
  t13 = sp(k2, p2);
  t14 = 0.1e1 / t13;
  t18 = -t10 * t8 + t2;
  t19 = sp(k2, p1);
  t20 = 0.1e1 / t19;
  t23 = sp(k1, p3);
  t24 = 0.1e1 / t23;
  t26 = sp(k2, p3);
  t27 = 0.1e1 / t26;
  t29 = sp(k1, p2);
  t30 = 0.1e1 / t29;
  t33 = sp(k1, p1);
  t34 = 0.1e1 / t33;
  t40 = t5 * t3;
  t43 = t5 + t3;
  t44 = 0.1e1 / t43;
  t45 = t44 * t5;
  t46 = t45 * t9;
  t47 = 0.256e3 * t46;
  t48 = t5 * t5;
  t49 = t44 * t48;
  t51 = t48 - t40;
  t54 = 0.128e3 * t10 * t51 + t47 - 0.256e3 * t49;
  t58 = 0.4e1 * t40;
  t59 = t3 * t3;
  t68 = t5 - t3;
  t69 = t43 * t43;
  t70 = 0.1e1 / t69;
  t71 = t68 * t70;
  t72 = t9 * t9;
  t73 = t71 * t72;
  t74 = 0.256e3 * t73;
  t75 = 0.2e1 * t40;
  t76 = t48 - t75 - t59;
  t79 = 0.256e3 * t76 * t70 * t9;
  t85 = t45 * t3 * t9;
  t86 = 0.256e3 * t85;
  t89 = t44 * t3;
  t90 = t89 * t9;
  t91 = 0.256e3 * t90;
  t94 = -t40 + t59;
  t97 = 0.128e3 * t10 * t94 - 0.256e3 * t44 * t59 + t91;
  t99 = t48 + t75 - t59;
  t102 = 0.256e3 * t99 * t70 * t9;
  t111 = 0.2e1 * t3;
  t124 = 0.6e1 * t40;
  t128 = t10 * t5;
  t130 = 0.256e3 * t128 * t3;
  t131 = 0.512e3 * t40;
  t133 = t10 * t48 * t3;
  t141 = 0.2e1 * t5;
  t155 = t128 * t59;
  t164 = t44 * t10;
  t167 = 0.1e1 / t72;
  t168 = t167 * t5;
  t170 = 0.512e3 * t164 * t5 - 0.256e3 * t168;
  t171 = t170 * t27;
  t172 = t19 * t19;
  t180 = 0.512e3 * t71;
  t182 = t68 * t44 * t10;
  t183 = 0.256e3 * t182;
  t195 = t167 * t3;
  t197 = 0.512e3 * t164 * t3 - 0.256e3 * t195;
  t199 = t13 * t13;
  t200 = t197 * t27 * t199;
  t210 = t48 + t59;
  t228 = 0.3e1 * t5;
  t229 = t228 + t3;
  t232 = t164 * t48;
  t236 = 0.128e3 * t46;
  t241 = -0.2e1 + t5 + t3;
  t254 = 0.3e1 * t3;
  t255 = t5 + t254;
  t271 = t71 * t9;
  t273 = -0.128e3 * t271 + 0.128e3 * t45;
  t274 = t26 * t26;
  t276 = 0.128e3 * t73;
  t277 = -t141 + t111 + t48 + t58 + t59;
  t285 = 0.128e3 * t85;
  t293 = t164 * t59;
  t297 = 0.128e3 * t90;
  t308 = 0.128e3 * t271 + 0.128e3 * t89;
  t310 = t141 - t111 + t48 + t58 + t59;
  t323 = 0.256e3 * t45;
  t324 = 0.5e1 * t5;
  t329 = t167 * t48;
  t330 = 0.256e3 * t329;
  t338 = 0.256e3 * t89;
  t339 = t10 * t3;
  t345 = 0.256e3 * t271;
  t346 = t141 - t3;
  t355 = 0.12e2 * t40;
  t356 = 0.3e1 * t59;
  t362 = 0.256e3 * t329 * t3;
  t369 = 0.256e3 * t167 * t59;
  t373 = 0.5e1 * t3;
  t378 = t5 - t111;
  t386 = 0.10e2 * t40;
  t392 = 0.256e3 * t168 * t59;
  t403 = 0.2e1 * t48;
  t404 = 0.2e1 * t59;
  t405 = t48 * t5;
  t406 = t48 * t3;
  t408 = t59 * t5;
  t410 = t59 * t3;
  t416 = 0.128e3 * t40 * t182;
  t448 = 0.3e1 * t48;
  t502 = t1 * t27;
  t507 = t502 * t167 * t13;
  t508 = 0.512e3 * t507;
  t514 = t1 * t68 * t70;
  t515 = t1 * t44;
  t516 = t515 * t339;
  t528 = t515 * t128;
  t543 = 0.256e3 * t1 * t10;
  t553 = 0.256e3 * t514;
  t555 = 0.256e3 * t1;
  t561 = 0.512e3 * t6 * t195;
  return(Bt_fH_re * ((t12 * t14 + t18 * t20) * t24 + t18 * t27 * t30 + t12 * t27 * t34) * PREF_R_CA + Bt_fA_re * (-0.512e3 * t27 * t10 * t40 + (t54 * t14 * t19 - 0.256e3 * t9 + 0.256e3 * (t48 + t58 + t59) * t44 + (-0.128e3 * t48 - 0.768e3 * t40 - 0.128e3 * t59) * t10 + ((-0.128e3 * t44 * t76 - t74 + t79) * t26 + t86) * t14 + (t97 * t13 + (0.128e3 * t44 * t99 - t102 + t74) * t26 + t86) * t20) * t24 + ((-t47 + 0.256e3 * t5 * (t5 + t111) * t44 + (-0.128e3 * t48 - 0.128e3 * t40) * t10) * t27 * t19 + t97 * t27 * t13 + t74 - t79 + 0.128e3 * (t48 - t124 - t59) * t44 + t130 + (-t86 + t131 - 0.256e3 * t133) * t27) * t30 + (t54 * t27 * t19 + (-t91 + 0.256e3 * t3 * (t141 + t3) * t44 + (-0.128e3 * t40 - 0.128e3 * t59) * t10) * t27 * t13 - t74 + t102 - 0.128e3 * (t48 + t124 - t59) * t44 + t130 + (-t86 + t131 - 0.256e3 * t155) * t27) * t34) * PREF_R_CA + At_fH_re * (t171 * t172 + ((0.256e3 * t167 * t43 - 0.512e3 * t10) * t27 * t13 - t180 + t183 + (-0.512e3 * t164 * t5 * t68 + 0.256e3 * t167 * t51) * t27) * t19 + t200 + (t180 - t183 + (0.512e3 * t164 * t3 * t68 + 0.256e3 * t167 * t94) * t27) * t13 + 0.512e3 * t210 * t70 - 0.256e3 * t210 * t44 * t10 + (-0.512e3 * t3 * t45 + t130) * t27 + (0.128e3 * t14 * t10 * t172 * t5 + ((0.256e3 * t5 + 0.128e3 * t3) * t10 + ((-0.128e3 * t229 * t3 * t70 - 0.128e3 * t232) * t26 - t236 - 0.128e3 * t5 * (-0.2e1 + t5) * t44 + 0.64e2 * t241 * t5 * t10) * t14) * t19 + (0.128e3 * t5 + 0.256e3 * t3) * t10 * t13 + (-0.128e3 * t229 * t255 * t70 + 0.256e3 * t164 * t40) * t26 + 0.128e3 * t9 - 0.128e3 * (t141 + t111 + t48 + t59) * t44 + 0.64e2 * t43 * (0.2e1 + t5 + t3) * t10 + (t273 * t274 + (0.128e3 * t277 * t70 * t9 - 0.64e2 * t277 * t44 + t276) * t26 - t285) * t14 + (0.128e3 * t10 * t199 * t3 + ((-0.128e3 * t255 * t5 * t70 - 0.128e3 * t293) * t26 - t297 - 0.128e3 * t3 * (-0.2e1 + t3) * t44 + 0.64e2 * t241 * t3 * t10) * t13 + t308 * t274 + (0.128e3 * t310 * t70 * t9 - 0.64e2 * t310 * t44 - t276) * t26 - t285) * t20) * t24 + ((t171 * t13 + (-t323 + 0.128e3 * t5 * (t3 + t324) * t164 - t330) * t27) * t172 + (-t197 * t27 * t199 + (-t180 + t183 + (t338 - 0.128e3 * t339) * t27) * t13 + t345 - 0.128e3 * t229 * t346 * t70 + 0.384e3 * t232 + (t236 - 0.128e3 * t5 * (0.2e1 + t5 + t111) * t44 + 0.64e2 * t5 * (t141 + t111 + t48 + t355 + t356) * t164 - t362) * t27) * t19 + (-0.512e3 * t293 + t369) * t27 * t199 + (-0.128e3 * t3 * (t5 - t373) * t70 + 0.128e3 * t3 * t378 * t164 + (-t297 + 0.128e3 * t3 * (0.2e1 + t254) * t44 + 0.64e2 * t3 * (-t141 - t111 + t48 - t386 - t356) * t164 + t392) * t27) * t13 - t273 * t26 - t276 + 0.128e3 * (t141 - t111 + t48 - t356) * t70 * t9 - 0.64e2 * (t403 - t404 + t405 + 0.5e1 * t406 - 0.7e1 * t408 - 0.3e1 * t410) * t70 + t416 + (-0.256e3 * t3 * t49 + 0.128e3 * t133 + t285) * t27) * t30 + ((-t170 * t27 * t13 + (-0.512e3 * t232 + t330) * t27) * t172 + (t200 + (t180 - t183 + (t323 - 0.128e3 * t128) * t27) * t13 + 0.128e3 * t5 * (t324 - t3) * t70 - 0.128e3 * t5 * t346 * t164 + (-t236 + 0.128e3 * t5 * (0.2e1 + t228) * t44 - 0.64e2 * t5 * (t141 + t111 + t448 + t386 - t59) * t164 + t362) * t27) * t19 + (-t338 + 0.128e3 * t3 * (t5 + t373) * t164 - t369) * t27 * t199 + (-t345 + 0.128e3 * t255 * t378 * t70 + 0.384e3 * t293 + (t297 - 0.128e3 * t3 * (0.2e1 + t141 + t3) * t44 + 0.64e2 * t3 * (t141 + t111 + t448 + t355 + t59) * t164 - t392) * t27) * t13 - t308 * t26 + t276 - 0.128e3 * (t141 - t111 + t448 - t59) * t70 * t9 + 0.64e2 * (t403 - t404 + 0.3e1 * t405 + 0.7e1 * t406 - 0.5e1 * t408 - t410) * t70 - t416 + (-0.256e3 * t45 * t59 + 0.128e3 * t155 + t285) * t27) * t34) * PREF_R_CA + At_fA_re * (0.512e3 * t502 * t167 * t19 - t508 + (0.512e3 * t4 - 0.512e3 * t6) * t167 * t27 + (((0.256e3 * t514 + 0.256e3 * t516) * t26 - 0.512e3 * t515 * t5 + 0.128e3 * t1 * (0.2e1 + t5 - t3) * t10) * t14 + ((0.256e3 * t514 - 0.256e3 * t528) * t26 + 0.512e3 * t515 * t3 + 0.128e3 * t1 * (-0.2e1 + t5 - t3) * t10) * t20) * t24 + ((t508 + (0.512e3 * t167 * t6 - t543) * t27) * t19 + 0.512e3 * t502 * t195 * t13 + t553 - 0.256e3 * t528 + (t555 - 0.128e3 * t1 * (0.2e1 + t5 + t254) * t10 + t561) * t27) * t30 + ((-0.512e3 * t168 * t502 - 0.512e3 * t507) * t19 + (-0.512e3 * t1 * t167 * t3 + t543) * t27 * t13 + t553 + 0.256e3 * t516 + (-t555 + 0.128e3 * t1 * (0.2e1 + t228 + t3) * t10 - t561) * t27) * t34) * PREF_R_CA);
}


#include "UID_HEADER.h"

double Eval_UID_E00S (UID_ARGS)
{

UID_DEFINITIONS


  double t10;
  double t101;
  double t108;
  double t11;
  double t110;
  double t111;
  double t12;
  double t124;
  double t128;
  double t13;
  double t135;
  double t137;
  double t14;
  double t141;
  double t142;
  double t15;
  double t16;
  double t163;
  double t169;
  double t17;
  double t170;
  double t171;
  double t172;
  double t177;
  double t179;
  double t18;
  double t187;
  double t19;
  double t195;
  double t197;
  double t20;
  double t205;
  double t207;
  double t21;
  double t212;
  double t216;
  double t22;
  double t223;
  double t23;
  double t24;
  double t241;
  double t245;
  double t248;
  double t249;
  double t25;
  double t250;
  double t251;
  double t253;
  double t255;
  double t256;
  double t257;
  double t258;
  double t259;
  double t26;
  double t260;
  double t261;
  double t262;
  double t264;
  double t265;
  double t266;
  double t267;
  double t27;
  double t272;
  double t275;
  double t276;
  double t278;
  double t29;
  double t291;
  double t3;
  double t308;
  double t31;
  double t311;
  double t32;
  double t33;
  double t333;
  double t34;
  double t347;
  double t35;
  double t36;
  double t37;
  double t38;
  double t39;
  double t40;
  double t41;
  double t43;
  double t44;
  double t45;
  double t46;
  double t47;
  double t5;
  double t50;
  double t51;
  double t53;
  double t54;
  double t55;
  double t59;
  double t61;
  double t62;
  double t66;
  double t68;
  double t7;
  double t73;
  double t76;
  double t77;
  double t78;
  double t79;
  double t8;
  double t85;
  double t87;
  double t89;
  double t9;
  double t94;
  double t97;
  double t99;
  t3 = Z(k2, p3, p1);
  t5 = Z(p3, k2, p1);
  t7 = 0.1e1 / t3 / t5;
  t8 = sp(p2, p3);
  t9 = t7 * t8;
  t10 = t3 * t3;
  t11 = 0.1e1 / t10;
  t12 = sp(k2, p2);
  t13 = t11 * t12;
  t14 = -t9 + t13;
  t15 = 0.256e3 * t14;
  t16 = sp(k1, p2);
  t17 = 0.1e1 / t16;
  t18 = t15 * t17;
  t19 = sp(k1, k2);
  t20 = t18 * t19;
  t21 = 0.256e3 * t11;
  t22 = sp(k2, p3);
  t23 = t7 * t22;
  t24 = 0.512e3 * t23;
  t25 = 0.768e3 * t14;
  t26 = sp(P1, p2);
  t27 = 0.1e1 / t26;
  t29 = sp(P1, k2);
  t31 = t7 * t12;
  t32 = t5 * t5;
  t33 = 0.1e1 / t32;
  t34 = t33 * t8;
  t35 = -t31 + t34;
  t36 = 0.256e3 * t35;
  t37 = sp(k1, p3);
  t38 = t36 * t37;
  t39 = t12 * t12;
  t40 = t11 * t39;
  t41 = 0.128e3 * t40;
  t43 = t7 * t8 * t12;
  t44 = 0.256e3 * t43;
  t45 = t8 * t8;
  t46 = t33 * t45;
  t47 = 0.128e3 * t46;
  t50 = 0.768e3 * t35;
  t51 = sp(P1, p3);
  t53 = 0.512e3 * t40;
  t54 = 0.1024e4 * t43;
  t55 = 0.512e3 * t46;
  t59 = sp(P1, k1);
  t61 = t11 * t27;
  t62 = t29 * t29;
  t66 = -t25;
  t68 = -t15;
  t73 = t11 * t17;
  t76 = t7 * t37;
  t77 = 0.256e3 * t76;
  t78 = 0.128e3 * t13;
  t79 = 0.128e3 * t9;
  t85 = t11 * t26 * t29;
  t87 = t7 * t51;
  t89 = t11 * t19;
  t94 = 0.1e1 / t59;
  t97 = sp(K2, k2);
  t99 = -t50;
  t101 = t19 * t19;
  t108 = t37 * t37;
  t110 = 0.256e3 * t33 * t108;
  t111 = 0.128e3 * t35;
  t124 = 0.128e3 * t14;
  t128 = 0.256e3 * t23 - 0.128e3 * t11;
  t135 = sp(K2, P1);
  t137 = t16 * t27;
  t141 = t51 * t51;
  t142 = t33 * t141;
  t163 = t11 * t62;
  t169 = t33 * t37;
  t170 = t7 * t19;
  t171 = t169 - t170;
  t172 = 0.256e3 * t171;
  t177 = sp(K2, p2);
  t179 = -t36;
  t187 = 0.256e3 * t169;
  t195 = t7 * t26 * t29;
  t197 = t33 * t51;
  t205 = sp(K2, p3);
  t207 = -t24 + t21;
  t212 = -t89 + t76;
  t216 = t7 * t51 * t16;
  t223 = t11 * t16 * t62;
  t241 = t142 * t16;
  t245 = (t20 - t21 + t24 + t25 * t27 * t29 + (t38 - t41 + t44 - t47) * t17 + (t50 * t51 + t53 - t54 + t55) * t27) * t59 + 0.256e3 * t61 * t62 * t16 + t66 * t19 + (t68 * t17 * t59 + 0.512e3 * t13 - 0.512e3 * t9 + (0.256e3 * t73 * t19 + (-t77 - t78 + t79) * t17) * t26 + (0.128e3 * t85 + (-0.128e3 * t87 - 0.256e3 * t89 + t77) * t26) * t94) * t97 + t99 * t37 + (-0.256e3 * t73 * t101 + (0.512e3 * t76 + t78 - t79) * t17 * t19 + (t111 * t37 - t110) * t17) * t26 + (t66 * t27 * t29 + t21 + (t41 - t44 + t47) * t17 + (t51 * t99 - t53 + t54 - t55) * t27 - t24 + (t111 * t51 + t124 * t29 + t128 * t26 + t15 * t19 + t38) * t94) * t135 - 0.512e3 * t87 * t137 * t29 + 0.256e3 * t142 * t137 + (-0.256e3 * t61 * t62 - t128 * t17 * t26 + (0.512e3 * t27 * t51 * t7 - t124 * t17) * t29 - t21 + t24 - 0.256e3 * t33 * t27 * t141 - t111 * t17 * t51 + (-0.128e3 * t163 + (0.256e3 * t87 - 0.256e3 * t76 + 0.256e3 * t89) * t29 - 0.128e3 * t142 + t172 * t51) * t94) * t177 + (t179 * t17 * t59 + 0.512e3 * t34 - 0.512e3 * t31 + (-0.256e3 * t7 * t17 * t19 + (t187 + 0.128e3 * t31 - 0.128e3 * t34) * t17) * t26 + (-0.128e3 * t195 + (0.128e3 * t197 + 0.256e3 * t170 - t187) * t26) * t94) * t205 + t207 * t16 + ((0.256e3 * t16 * t37 * t7 - 0.256e3 * t16 * t89 + 0.128e3 * t212 * t26 - 0.256e3 * t216) * t29 + 0.128e3 * t223 + (0.256e3 * t16 * t19 * t7 - 0.256e3 * t16 * t169) * t51 + (-0.512e3 * t19 * t37 * t7 + 0.256e3 * t101 * t11 - 0.128e3 * t171 * t51 + t110) * t26 + 0.128e3 * t241) * t94;
  t248 = EPS_(P1, k1, p2, p3);
  t249 = t33 * t248;
  t250 = EPS_(P1, k1, k2, p2);
  t251 = t7 * t250;
  t253 = -0.512e3 * t249 - 0.512e3 * t251;
  t255 = EPS_(K2, P1, k2, p2);
  t256 = t11 * t255;
  t257 = EPS_(K2, P1, p2, p3);
  t258 = t7 * t257;
  t259 = t11 * t250;
  t260 = t7 * t248;
  t261 = -t256 - t258 - t259 - t260;
  t262 = 0.256e3 * t261;
  t264 = t7 * t255;
  t265 = t33 * t257;
  t266 = t264 + t265 + t251 + t249;
  t267 = 0.256e3 * t266;
  t272 = -0.512e3 * t259 - 0.512e3 * t260;
  t275 = -t266;
  t276 = 0.512e3 * t275;
  t278 = -t261;
  t291 = 0.512e3 * t278;
  t308 = -0.128e3 * t256 - 0.128e3 * t258 + 0.128e3 * t259 + 0.128e3 * t260;
  t311 = 0.128e3 * t264 + 0.128e3 * t265 - 0.128e3 * t251 - 0.128e3 * t249;
  t333 = (-0.256e3 * t40 + 0.512e3 * t43 - 0.256e3 * t46) * t17;
  t347 = t36 * t17;
  return(At_fH_re * t245 * PREF_R_CA + At_fA_re * ((t12 * t262 + t253 * t37 + t267 * t8) * t17 + t272 * t17 * t97 + (0.1024e4 * t12 * t278 + 0.1024e4 * t275 * t8 + t276 * t51) * t27 - t253 * t17 * t205 - t272 * t17 * t19 + t291 * t27 * t29 + (-t19 * t291 - t262 * t29 - t267 * t51 - t276 * t37) * t94) * PREF_R_CA + Bt_fH_re * ((t12 * t308 + t311 * t8) * t17 + (-t29 * t308 - t311 * t51) * t94) * PREF_R_CA + Bt_fA_re * (((t179 * t51 + t207 * t26 + t29 * t68) * t94 + t333) * t135 + (t18 * t29 + (-0.512e3 * t29 * t51 * t7 + 0.256e3 * t142 + 0.256e3 * t163) * t94 - t207 * t17 * t26 + t347 * t51) * t177 + (t18 * t26 + (0.256e3 * t26 * t51 * t7 - 0.256e3 * t85) * t94) * t97 + (0.256e3 * t223 + (0.256e3 * t212 * t26 - 0.512e3 * t216) * t29 - t172 * t51 * t26 + 0.256e3 * t241) * t94 + (t17 * t38 + t20) * t26 + (t347 * t26 + (-0.256e3 * t197 * t26 + 0.256e3 * t195) * t94) * t205 + t333 * t59) * PREF_R_CA);
}
